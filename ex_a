(1). 使用 while 循环,统计 1+2+3+4...+100。提示:可以用一个独立的变量 sum 存放求和的值。

参考答案:
#!/bin/bash
sum=0
for i in {1..100}
do
let sum+=i
done
echo $sum

----------------------------------------------------------------------------------

(2). 编写脚本,使用 for 对 2000 以内的整数循环,判断哪些数字是177的倍数并显示。
提示:可以使用取余运算，余数为0则是倍数

参考答案:
#!/bin/bash
for i in {1..2000}
do
num=$[i%177]
if [ $num -eq 0 ];then
echo $i
fi
done

----------------------------------------------------------------------------------

(3). 编写脚本,通过 3 个 read 命令读取用户输入的三个任意数字,脚本对输入的三个数字求和输出。

参考答案:
#!/bin/bash
read -p "请输入数字" num1
read -p "请输入数字" num2
read -p "请输入数字" num3
echo $[num1+num2+num3]

----------------------------------------------------------------------------------

(4). 判断当前系统启动的进程数量,如果进程数量超过 100 个,则发送邮件给 root 报警。
(ps aux命令可以查看进程,wc -l可以统计数量)

参考答案:
#!/bin/bash
num=`ps aux | wc -l`
[ $num -gt 100 ] && echo "进程超过100啦～" | mail -s Warning root

----------------------------------------------------------------------------------

(5). 编写脚本,测试当前用户对/etc/passwd 文件是否具有读、写、执行的权限,脚本执行结果类似下面的效果。
当前用户对/etc/passwd 有读权限
当前用户对/etc/passwd 有写权限
当前用户对/etc/passwd 无执行权限

参考答案:
#!/bin/bash
file=/etc/passwd
[ -r /etc/passwd ] && echo "当前用户对$file 有读权限" || echo "当前用户对$file >没有读权限"
[ -w /etc/passwd ] && echo "当前用户对$file 有写权限" || echo "当前用户对$file >没有写权限"
[ -x /etc/passwd ] && echo "当前用户对$file 有执行权限" || echo "当前用户对$file 没有执行权限"

----------------------------------------------------------------------------------

(6).有一个文件user.txt 里面存放了不同的账户名称,具体内容如下：
zhangsan
lisi
wangwu
请编写脚本，能够根据文件中的账户名分别创建账户。

参考答案:
#!/bin/bash
for i in `cat user.txt`
do
    useradd $i
done

----------------------------------------------------------------------------------

(选做题). 使用循环打印 5*5 的星星,脚本输出如下形状:(5 行,5 列),备注:echo -n 可以不换行输出。
* * * * *
* * * * *
* * * * *
* * * * *

参考答案:
#!/bin/bash
for i in {1..5}
do
    for j in {1..5}
    do
        echo -n "* "     #注意 *后面有个空格
    done
    echo                 #打印 5 个不换号的*后,打印一个换行
done


