ctrl + d  结束输入
  ctrl + s             Crtl + q    
冻结终端 输入不可见    解冻终端 之前输入可见


脚本 命令 非交互式
----------------------------------------------------------------------
chmod +x 加运行权限                                         最后还是要增加权限
当前文件 不可直接 文件名运行                                为之后运行方便
./文件名  可运行 
/opt/文件名 绝对路径可运行

--------=================================
不加 x 运行权限

bash 文件名(脚本)

ksh(解释器直接解释脚本文件) 
脚本中有 cd 命令 改变位置时 不可改变当前位置
实际 bash 解释器已经进入 进入过 cd 的位置
但 bash 运行完成后 关闭(离开) 
请人执行
sshd-bash-bash-sleep

-----------------------------------------------------------------
使用当前解释器执行
source 文件名(脚本)
      .  脚本
如果脚本中 有移动文件位置 命令 可以改变当前位置
亲自执行
sshd-bash-sleep


临时关闭防火墙 
systemctl stop firewalld



变量脚本 >>>>  大于 >>>>>>>.常量脚本

 自定义变量
  大小写字母 数字 .下划线 (不要数字开头 .特殊符号
        变量名称=值   >>>>   a=10;
         ${a}RMB 大括号 隔开变量与常量
                    空格可以给开   特殊符号也可以隔开 ( # )
           unset a 删除变量 (变量名)
               env  查看所有环境变量
             set 查看所有变量  自定义变量


环境变量 
  $USER   $UID      $HOME   $HOSTNAME        $SHELL       
  用户名   用户uid号      家目录    当前服务器名称      现在用的解释器名字

    $PATH           $PS1        $PS2        $PWD
  运行指令的路径         一级提示符     二级提示符       当前位置
             $PS1='[ \u@\h \w] \$' 命令前段提示符
             $PS2='>'

 位置变量 .预定义变量

  ' $1'  ( 输入的第一个参数 )    ' $0 ' ( 脚本名)  
        ' $$ ' ( 脚本执行时的进程号随机 )      ' $# '   ( 脚本后参数数量 )
                  ' $* '    ( 显示所有参数 )  
          $! 显示最后一个放在后台的程序的进程号
         ' $? '   ( 判断上一条指令是否执行成功 0 成功 非0 失败 )

           '   '    单引号 界定范围 屏蔽特殊符号
           "   "   双引号 界定范围
           `    `  反引号 获取命令执行的结果


               a=10
            echo "$a"  >>>> 输出为 10
            echo '$a'  >>>> 输出为 $a
               a=`date`  /  a=$(date)
            echo $a  >>>> 输出为data的执行结果 
                           
            备份日志
            tar -zcf log-`date +%Y-%m-%d`.tar.gz /var/log
                   
        read
             read -p " please " u  //u为变量
              useradd $u

            stty -echo 屏蔽回显 可运行 输密码时 密码不可见
            stty echo  回显

             定义 环境变量 可以再不同 解释器中使用
            export 发布全局变量 
            自定义变量只可在当前解释其中使用
             新开一个解释器 将不可用

           export a=10
           export b  将局部变量扩展为全局变量
                     ( b 变量已经存在时 )

           export -n 取消全局变量 恢复为局部变量
            unset   取消变量
                    没有变量存在时 echo 输出结果 为一行空行


     shell  中 运算
         expr 1 + 1   直接运算 符号间 空格
         expr 1 - 1
         expr 1 '*' 1   
         expr 1 \* 1   转义\之后的一个特殊符号  \转义符号
         expr 1 / 1 
         echo \$a  >>>>>  输出结果为 $a
         expr 10 % 3  >>>>> 取余数  求模
         
                       $ [ ] , $ (( )) 都可以运算       
         echo $[1+1] echo才能输出结果 单独$[] 不可用
         echo $[10*5]
         echo $[1-1]
         echo $[10/5]
         echo $[10%5] 取余数
         a=10 , b=20
         echo $[a+b]


       let 用于变量计算 结果不显示
         let 1+1
         let a=1+1
         echo $a
         let a=1
             对变量自增减
         let c=c+c      主流 
         let a=a+1  |  let a++ 
                    |  let a--

         let a=a+2  |  let a+=2
                    |  let a-=2

         let a=a*2  |  let a*=2
         let a=a/2  |  let a/=2
         let a=a%2  |  let a%=2

                 echo $a
                       以上 算数 小数 不可用

              计算器   bc  可以计算小数
           bc 回车 即可使用
            显示小数点后位数
           scale=number

            echo "1.1+1" | bc
            echo "scale=3;10/3" | bc 
                        非交互式  脚本专用 可计算小数

 
脚本
    1 声明解释器
   2 注释
  3 代码





































